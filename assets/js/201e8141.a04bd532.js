"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3251],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return n?o.createElement(m,i(i({ref:t},s),{},{components:n})):o.createElement(m,i({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8677:(e,t,n)=>{n.d(t,{Y:()=>a});var o=n(7294);const a=e=>{let{text:t}=e;return o.createElement("p",{className:"pb-5 mb-5 -mt-3 border-0 border-b border-b-gray-300 border-solid text-gray-500"},t)}},8479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905)),r=n(8677);const i={},c="BlockVault Contracts",l={unversionedId:"pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/index",id:"pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/index",title:"BlockVault Contracts",description:'<DocSubheader text="Developing and publishing BlockVault contracts for loan life cycle events"',source:"@site/docs/pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/index.md",sourceDirName:"pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts",slug:"/pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/",permalink:"/docs/pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Configuring Replication",permalink:"/docs/pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/deploying-the-encrypted-object-store/configuring-replication"},next:{title:"Onboard Loan Contract",permalink:"/docs/pb/integrating/integrating-with-p8e/p8e-contract-execution-environment-p8e/p8e-contracts/example-loan-contracts"}},p={},s=[{value:"BlockVault Gradle Plugin",id:"blockvault-gradle-plugin",level:2},{value:"Publishing via the BlockVault CEE API",id:"publishing-via-the-blockvault-cee-api",level:2},{value:"Local Environment",id:"local-environment",level:3},{value:"Test Environment",id:"test-environment",level:3},{value:"Production Environment",id:"production-environment",level:3}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blockvault-contracts"},"BlockVault Contracts"),(0,a.kt)(r.Y,{text:"Developing and publishing BlockVault contracts for loan life cycle events",mdxType:"DocSubheader"}),(0,a.kt)("p",null,"Asset originators can technically get away with mastering a single BlockVault contract to simply onboard assets to Provenance, however, executing a single contract throughout the entire life cycle of an asset such as a mortgage would provide little utility. For that reason this guide will touch on a series of BlockVault contracts designed to onboard and update a mortgage as it goes through the flow of being onboarded and validated by a third party in preparation for sale to an investor."),(0,a.kt)("h2",{id:"blockvault-gradle-plugin"},"BlockVault Gradle Plugin"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Having an understanding of the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.provenance.io/docs/modules/metadata-module"},"Provenance Metadata module")," is strongly recommended.")),(0,a.kt)("p",null,"In order to execute contracts with the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/provenance-io/p8e-scope-sdk"},"Provenance Scope SDK"),", the contracts must be published into your execution environment. The ",(0,a.kt)("inlineCode",{parentName:"p"},"p8e-gradle-plugin")," provides a set of tasks in order to accomplish just that. Publishing contracts performs the following high level actions in order to allow contracts to be executed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An uberjar is built which contains a set of contracts and all associated protobuf messages associated with those contracts. This uberjar is persisted to p8e's encrypted ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/provenance-io/object-store"},"object store"),". This allows BlockVault to later pull it and make use of a ",(0,a.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/7/docs/api/java/lang/ClassLoader.html"},"Class Loader")," to load it at runtime."),(0,a.kt)("li",{parentName:"ul"},"A concrete implementation of ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/provenance-io/p8e-scope-sdk/blob/main/contract-base/src/main/kotlin/io/provenance/scope/contract/contracts/ContractHash.kt"},"ContractHash")," is generated and stored alongside your source code. Similarly, an implementation of ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/provenance-io/p8e-scope-sdk/blob/main/contract-proto/src/main/kotlin/io/provenance/scope/contract/proto/ProtoHash.kt"},"ProtoHash")," is also generated. These classes will be built into the jars that are depended on by the loan onboarding service, or any other application that will execute contracts. These classes provide a mapping from P8eContracts and their associated protobuf messages to the hash of the uberjar they are contained within. Ultimately, the sdk will make use of these classes via the ",(0,a.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html"},"service provider")," facility.")),(0,a.kt)("h2",{id:"publishing-via-the-blockvault-cee-api"},"Publishing via the BlockVault CEE API"),(0,a.kt)("p",null,"To make things easier, the ",(0,a.kt)("inlineCode",{parentName:"p"},"p8e-CEE-API")," exposes the ",(0,a.kt)("inlineCode",{parentName:"p"},"p8e-gradle-plugin")," functionality in a RESTful endpoint, allowing users to publish their own BlockVault contracts or pre-defined contracts into their own BlockVault environment. See the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.provenance.io/docs/integrating/asset-originators-guide/loan-onboarding-service/api-specification#create-contract-specification"},"Create Contract Specification")," documentation on the API Specification page."),(0,a.kt)("p",null,"The inputs that remain the same no matter which environment you're working in include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"account - the originator ID that will map to your key management solution"),(0,a.kt)("li",{parentName:"ul"},"scopeId - UUID for the new scope created for this new contract specification"),(0,a.kt)("li",{parentName:"ul"},"scopeSpecId - The ID of the Scope Specification associated with this contract"),(0,a.kt)("li",{parentName:"ul"},"contractSpecId - UUID for the new contract specification")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"chainId")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"nodeEndpoint")," values depend on your environment."),(0,a.kt)("h3",{id:"local-environment"},"Local Environment"),(0,a.kt)("p",null,"These values depend on values set in the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"genesis.json")," files, but they default to:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"chainId")," - chain-local"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"nodeEndpoint")," - tcp://localhost:26657"),(0,a.kt)("h3",{id:"test-environment"},"Test Environment"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"chainId")," - pio-testnet-1"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"nodeEndpoint")," - Ask for appropriate node endpoint"),(0,a.kt)("h3",{id:"production-environment"},"Production Environment"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"chainId")," - pio-mainnet-1"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"nodeEndpoint")," - Ask for appropriate node endpoint"))}u.isMDXComponent=!0}}]);