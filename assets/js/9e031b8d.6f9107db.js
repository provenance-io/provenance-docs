"use strict";(self.webpackChunkprovenance_blockchain_developer_portal=self.webpackChunkprovenance_blockchain_developer_portal||[]).push([[6328],{7197:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var t=n(85893),i=n(11151);const o={},c="State",s={id:"sdk/trigger/state",title:"state",description:"\x3c!--",source:"@site/docs/sdk/trigger/02_state.md",sourceDirName:"sdk/trigger",slug:"/sdk/trigger/state",permalink:"/docs/sdk/trigger/state",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"concepts",permalink:"/docs/sdk/trigger/concepts"},next:{title:"messages",permalink:"/docs/sdk/trigger/messages"}},d={},a=[{value:"Trigger",id:"trigger",level:2},{value:"TriggerEventI",id:"triggereventi",level:3},{value:"BlockHeightEvent",id:"blockheightevent",level:4},{value:"BlockTimeEvent",id:"blocktimeevent",level:4},{value:"TransactionEvent",id:"transactionevent",level:4},{value:"Attribute",id:"attribute",level:5},{value:"Queue",id:"queue",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"state",children:"State"}),"\n",(0,t.jsx)(r.p,{children:"The trigger module manages the state of every trigger."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#trigger",children:"Trigger"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#triggereventi",children:"TriggerEventI"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#blockheightevent",children:"BlockHeightEvent"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#blocktimeevent",children:"BlockTimeEvent"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#transactionevent",children:"TransactionEvent"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#queue",children:"Queue"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"trigger",children:"Trigger"}),"\n",(0,t.jsxs)(r.p,{children:["A ",(0,t.jsx)(r.code,{children:"Trigger"})," is the main data structure used by the module. It keeps track of the owner, event, and actions for a single ",(0,t.jsx)(r.code,{children:"Trigger"}),". Every ",(0,t.jsx)(r.code,{children:"Trigger"})," gets its own unique identifier, and a unique entry within the ",(0,t.jsx)(r.code,{children:"Event Listener"})," and ",(0,t.jsx)(r.code,{children:"Gas Limit"})," tables. The ",(0,t.jsx)(r.code,{children:"Event Listener"})," table allows the event detection system to quickly filter applicable ",(0,t.jsx)(r.code,{children:"Triggers"})," by name and type. A trigger can vary in size making it difficult to calculate gas usage on store, thus we opted to store remaining transaction gas in the ",(0,t.jsx)(r.code,{children:"Gas Limit"})," table. It gives us a predictable way to calculate and store remaining gas."]}),"\n",(0,t.jsxs)(r.p,{children:["The excess gas on a MsgCreateTrigger transaction will be used for the ",(0,t.jsx)(r.code,{children:"Trigger's"})," ",(0,t.jsx)(r.code,{children:"Gas Limit"})," table. The maximum ",(0,t.jsx)(r.code,{children:"Gas Limit"})," for a ",(0,t.jsx)(r.code,{children:"Trigger"})," is ",(0,t.jsx)(r.code,{children:"2000000"}),"."]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Trigger: ",(0,t.jsx)(r.code,{children:"0x01 | Trigger ID (8 bytes) -> ProtocolBuffers(Trigger)"})]}),"\n",(0,t.jsxs)(r.li,{children:["Trigger ID: ",(0,t.jsx)(r.code,{children:"0x05 -> uint64(TriggerID)"})]}),"\n",(0,t.jsxs)(r.li,{children:["Event Listener: ",(0,t.jsx)(r.code,{children:"0x02 | Event Type (32 bytes) | Order (8 bytes) -> []byte{}"})]}),"\n",(0,t.jsxs)(r.li,{children:["Gas Limit: ",(0,t.jsx)(r.code,{children:"0x04 | Trigger ID (8 bytes) -> uint64(GasLimit)"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L13-L26",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L13-L26"})]}),"\n",(0,t.jsx)(r.h3,{id:"triggereventi",children:"TriggerEventI"}),"\n",(0,t.jsxs)(r.p,{children:["A ",(0,t.jsx)(r.code,{children:"Trigger"})," must have an event that implements the ",(0,t.jsx)(r.code,{children:"TriggerEventI"})," interface. Currently, the system supports ",(0,t.jsx)(r.code,{children:"BlockHeightEvent"}),", ",(0,t.jsx)(r.code,{children:"BlockTimeEvent"}),", and ",(0,t.jsx)(r.code,{children:"TransactionEvent"}),"."]}),"\n",(0,t.jsx)(r.h4,{id:"blockheightevent",children:"BlockHeightEvent"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"BlockHeightEvent"})," allows the user to configure their ",(0,t.jsx)(r.code,{children:"Trigger"})," to fire when the current block's ",(0,t.jsx)(r.code,{children:"Block Height"})," is greater than or equal to the defined one."]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L41-L49",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L41-L49"})]}),"\n",(0,t.jsx)(r.h4,{id:"blocktimeevent",children:"BlockTimeEvent"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"BlockTimeEvent"})," allows the user to configure their ",(0,t.jsx)(r.code,{children:"Trigger"})," to fire when the current block's ",(0,t.jsx)(r.code,{children:"Block Time"})," is greater than or equal to the defined one."]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L51-L59",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L51-L59"})]}),"\n",(0,t.jsx)(r.h4,{id:"transactionevent",children:"TransactionEvent"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"TransactionEvent"})," allows the user to configure their ",(0,t.jsx)(r.code,{children:"Trigger"})," to fire when a transaction event matching the user defined one has been emitted."]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L61-L71",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L61-L71"})]}),"\n",(0,t.jsx)(r.h5,{id:"attribute",children:"Attribute"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"Attribute"})," is used by the ",(0,t.jsx)(r.code,{children:"TransactionEvent"})," to allow the user to configure which attributes must be present on the transaction event. An ",(0,t.jsx)(r.code,{children:"Attribute"})," with an empty ",(0,t.jsx)(r.code,{children:"value"})," will only require the ",(0,t.jsx)(r.code,{children:"name"})," to match."]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L73-L82",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L73-L82"})]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"queue",children:"Queue"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"Queue"})," is an internal structure that we use to store and throttle the execution of ",(0,t.jsx)(r.code,{children:"Triggers"})," on the ",(0,t.jsx)(r.code,{children:"BeginBlock"}),". We store each ",(0,t.jsx)(r.code,{children:"Trigger"})," as a ",(0,t.jsx)(r.code,{children:"QueuedTrigger"}),", and then manipulate the ",(0,t.jsx)(r.code,{children:"Queue Start Index"})," and ",(0,t.jsx)(r.code,{children:"Queue Length"})," whenever we add or remove from the ",(0,t.jsx)(r.code,{children:"Queue"}),". When we add to the ",(0,t.jsx)(r.code,{children:"Queue"}),", the new element is added to the ",(0,t.jsx)(r.code,{children:"QueueStartIndex"})," + ",(0,t.jsx)(r.code,{children:"Length"}),". The ",(0,t.jsx)(r.code,{children:"QueueLength"})," is then incremented by one. When we dequeue from the Queue, the ",(0,t.jsx)(r.code,{children:"QueueStartIndex"})," will be incremented by 1 and the ",(0,t.jsx)(r.code,{children:"QueueLength"})," is decremented by 1. We also ensure the key of the dequeued element is removed."]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Queue Item: ",(0,t.jsx)(r.code,{children:"0x03 | Queue Index (8 bytes) -> ProtocolBuffers(QueuedTrigger)"})]}),"\n",(0,t.jsxs)(r.li,{children:["Queue Start Index: ",(0,t.jsx)(r.code,{children:"0x06 -> uint64(QueueStartIndex)"})]}),"\n",(0,t.jsxs)(r.li,{children:["Queue Length: ",(0,t.jsx)(r.code,{children:"0x07 -> uint64(QueueLength)"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["+++ ",(0,t.jsx)(r.a,{href:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L28-L39",children:"https://github.com/provenance-io/provenance/blob/bda28e5f58a4a58e8fef21141400ad362b84518b/proto/provenance/trigger/v1/trigger.proto#L28-L39"})]})]})}function l(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>s,a:()=>c});var t=n(67294);const i={},o=t.createContext(i);function c(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);