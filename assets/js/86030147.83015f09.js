"use strict";(self.webpackChunkprovenance_blockchain_developer_portal=self.webpackChunkprovenance_blockchain_developer_portal||[]).push([[8740],{73793:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=a(85893),s=a(11151),o=a(98677);const i={},r="Using Provenanced",c={id:"pb/blockchain/using-provenance/index",title:"Using Provenanced",description:"To get started with Provenance Blockchain you first need to install Provenance Blockchain and have access to a Provenance Blockchain node.",source:"@site/docs/pb/blockchain/using-provenance/index.md",sourceDirName:"pb/blockchain/using-provenance",slug:"/pb/blockchain/using-provenance/",permalink:"/docs/pb/blockchain/using-provenance/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Installing Provenanced",permalink:"/docs/pb/blockchain/running-a-node/"},next:{title:"Query Command",permalink:"/docs/pb/blockchain/using-provenance/query-command"}},d={},l=[{value:"Usage",id:"usage",level:2},{value:"Creating a Key(s)",id:"creating-a-keys",level:3},{value:"Restoring a Key",id:"restoring-a-key",level:3},{value:"Getting Hash",id:"getting-hash",level:3},{value:"Using `jq` to Parse JSON Output",id:"using-jq-to-parse-json-output",level:3},{value:"Before",id:"before",level:4},{value:"After",id:"after",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"using-provenanced",children:"Using Provenanced"}),"\n","\n",(0,t.jsx)(o.Y,{text:"Using the `provenanced` binary as a blockchain client."}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"To get started with Provenance Blockchain you first need to install Provenance Blockchain and have access to a Provenance Blockchain node."}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../running-a-node/",children:"See Installing Provenance Blockchain"})," if you have not installed",(0,t.jsx)(n.code,{children:"provenanced."})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../running-a-node/running-a-node-1/",children:"See Running a Node"}),"if you do not have access to a node or do not want to connect to a publicly available node."]})]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'~$ provenanced --help\nProvenance Blockchain App\n\nUsage:\n  provenanced [command]\n\nAvailable Commands:\n\n\n  add-genesis-account   Add a genesis account to genesis.json\n  add-genesis-marker    Adds a marker to genesis.json\n  add-genesis-root-name Add a name binding to genesis.json\n  collect-gentxs        Collect genesis txs and output a genesis.json file\n  debug                 Tool for helping with debugging your application\n  export                Export state to JSON\n  gentx                 Generate a genesis tx carrying a self delegation\n  help                  Help about any command\n  init                  Initialize files for a Provenance Blockchain daemon node\n  keys                  Manage your application\'s keys\n  migrate               Migrate genesis to a specified target version\n  query                 Querying subcommands\n  start                 Run the full node\n  status                Query remote node for status\n  tendermint            Tendermint subcommands\n  testnet               Initialize files for a simapp testnet\n  tx                    Transactions subcommands\n  unsafe-reset-all      Resets the blockchain database, removes address book files, and resets data/priv_validator_state.json to the genesis state\n  validate-genesis      validates the genesis file at the default location or at the location passed as an arg\n  version               Print the application binary version information\n\nFlags:\n  -h, --help                help for provenanced\n      --home string         directory for config and data (default "/Users/mconroy/Library/Application Support/Provenance")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n  -t, --testnet             Indicates this command should use the testnet configuration (default: false [mainnet])\n      --trace               print out full stack trace on errors\n\nUse "provenanced [command] --help" for more information about a command.\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Commands used throughout these examples will use some consistent flags that are worth noting."}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--testnet"})," to use testnet rather than mainnet"]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--chain-id pio-testnet-1"})," assumes that we are connected to the Provenance Blockchain testnet"]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--node tcp://localhost:26657"})," this is the default node location and port. In the examples below, we'll connect to a remote node without starting a local node. The remote node is a public testnet node hosted at ",(0,t.jsx)(n.code,{children:"https://rpc.test.provenance.io:443."})]})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"provenanced"})," binary provides a command-line interface to create and query transactions. To create a transaction requires just a few items:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a key pair capable of signing the transaction"}),"\n",(0,t.jsx)(n.li,{children:"a key pair capable of paying the gas fee"}),"\n",(0,t.jsx)(n.li,{children:"a blockchain node to submit the transaction to."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-keys",children:"Creating a Key(s)"}),"\n",(0,t.jsxs)(n.p,{children:["All interactions with Provenance Blockchain are secured with a public/private key pair that will act as your account(s) on the blockchain. We use the ",(0,t.jsx)(n.code,{children:"44'/1'/0'/0/0"}),' BIP32 path as an example where the coin-type "1" is a reference to Provenance Blockchain testnet. We use the ',(0,t.jsx)(n.code,{children:"44'/505'/0'/0/0"}),' BIP32 path as an example where coin-type "505" is a reference to the Hash token on Provenance Blockchain mainnet.']}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Refer to the ",(0,t.jsx)(n.a,{href:"/docs/pb/blockchain/basics/accounts",children:"Accounts"})," section for more information",(0,t.jsx)(n.a,{href:"/docs/pb/blockchain/basics/accounts#hd-wallet",children:" HD Wallet "}),"paths."]})}),"\n",(0,t.jsxs)(n.p,{children:["Create a key pair and store it in a local Keyring (change ",(0,t.jsx)(n.code,{children:"<name-of-key>"})," to a string value of your choosing):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# TESTNET (note: --hd-path \"44'/1'/0'/0/0\" can be used instead of coin type)\nprovenanced keys add <name_of_key> --coin-type=1 --testnet  -i\n\n# MAINNET (note: the default coin type is 505 for mainnet so no extra parameters are required)\nprovenanced keys add <name_of_key> -i\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\nfancy solar describe long tag soul gold boost vacuum baby famous narrow drink final smoke region pulse wrap expire fabric pause giant merit bird\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"When generating a new key it is important to store the generated mnemonic in a safe location to be used in the event that the key needs to be restored."})}),"\n",(0,t.jsx)(n.h3,{id:"restoring-a-key",children:"Restoring a Key"}),"\n",(0,t.jsx)(n.p,{children:"This command will prompt you for a mnemonic to restore the key at a specific path."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# TESTNET\nprovenanced keys add <name_of_key>  -i --testnet\n\n# MAINNET\nprovenanced keys add <name_of_key>  -i\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"> Enter your bip39 mnemonic, or hit enter to generate one.\nfancy solar describe long tag soul gold boost vacuum baby famous narrow drink final smoke region pulse wrap expire fabric pause giant merit bird\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# TESTNET\n> Enter your bip39 passphrase. This is combined with the mnemonic to derive the seed. Most users should just hit enter to use the default, ""\n\n- name: <name_of_key>\n  type: local\n  address: tp1gn8jlv9krqe23ql3ltq0ajcwwf7dyaq6uuludl\n  pubkey: tppub1addwnpepqd4tpv506lhl3j8hux0ss8km84gwmgapjtuea9wzt8z8n9eqjrjxg897tw0\n  mnemonic: ""\n  threshold: 0\n  pubkeys: []\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# MAINNET\n> Enter your bip39 passphrase. This is combined with the mnemonic to derive the seed. Most users should just hit enter to use the default, ""\n\n- name: <name_of_key>\n  type: local\n  address: pb1jd9yey59p6e70wp68ufltx8eh2xvxphqwhzcm9\n  pubkey: pbpub1addwnpepqfftn6g0p5hs94tp7f4h4d8tkpkjmx87nzxwmmclz89gfdtqfhstv9qd5s8\n  mnemonic: ""\n  threshold: 0\n  pubkeys: []\n'})}),"\n",(0,t.jsx)(n.h3,{id:"getting-hash",children:"Getting Hash"}),"\n",(0,t.jsxs)(n.p,{children:["Hash is the digital currency used to transact on the Provenance Blockchain. In order to execute any commands beyond basic queries against a node, you'll need Hash. On testnet receiving Hash is as easy as accessing the ",(0,t.jsx)(n.a,{href:"https://faucet.test.provenance.io",children:"Provenance Blockchain Faucet"})," and supplying your address. This small distribution of Hash on testnet allows you to develop against the public testnet as well as quickly get a feel for how the Provenance Blockchain ecosystem operates."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["The address associated to your key pair is a ",(0,t.jsx)(n.a,{href:"https://en.bitcoin.it/wiki/Bech32",children:"Bech32"})," address which is an encoded value of the public key portion of our key pair. Provenance Blockchain testnet Bech32 addresses begin with ",(0,t.jsx)(n.code,{children:"tp"})," whereas mainnet addresses begin with ",(0,t.jsx)(n.code,{children:"pb"}),"."]}),(0,t.jsxs)(n.p,{children:["Once we transferred Hash to our Bech32 address, it became a ",(0,t.jsx)(n.a,{href:"/docs/pb/blockchain/basics/accounts",children:"Provenance Blockchain account"}),"."]})]}),"\n",(0,t.jsx)(n.p,{children:"First, find the Bech32 address of the key created in the previous section:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"provenanced --testnet keys show <name-of-key>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The output will show the ",(0,t.jsx)(n.code,{children:"address"})," of your key:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'- name: <name-of-key>\n  type: local\n  address: tp1cuknswnphchtkwe68t4nshcaj4l4azv9ml2qhs\n  pubkey: tppub1addwnpepqgxlsrgv9znqeass2al9u9h37khapuecpp0al82wqyhzvn9hwtnzwak5uf3\n  mnemonic: ""\n  threshold: 0\n  pubkeys: []\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Copy the key ",(0,t.jsx)(n.code,{children:"address"})," and open the Provenance Blockchain testnet Hash faucet ",(0,t.jsx)(n.a,{href:"https://explorer.test.provenance.io/faucet",children:"https://explorer.test.provenance.io/faucet"}),", paste the value, and press Get Tokens:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Use the testnet Faucet to get Hash",src:a(24322).Z+"",width:"2254",height:"1708"})}),"\n",(0,t.jsxs)(n.p,{children:["Your ",(0,t.jsx)(n.code,{children:"address"})," will now have enough Hash to pay gas fees. Confirm your key ",(0,t.jsx)(n.code,{children:"address"})," has Hash:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"provenanced --testnet q bank balances tp1cuknswnphchtkwe68t4nshcaj4l4azv9ml2qhs \\\n --node=https://rpc.test.provenance.io:443\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'balances:\n- amount: "1000000000"\n  denom: nhash\npagination:\n  next_key: null\n  total: "0"\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"--node"})," flag allows us to connect our ",(0,t.jsx)(n.code,{children:"provenanced"})," client to a node running remotely. Thus, we're connecting to a public testnet node hosted at ",(0,t.jsx)(n.code,{children:"https://rpc.test.provenance.io:443."})]})}),"\n",(0,t.jsx)(n.h3,{id:"using-jq-to-parse-json-output",children:"Using `jq` to Parse JSON Output"}),"\n",(0,t.jsxs)(n.p,{children:["Using a json parsing tool is often useful for formatting data returned from ",(0,t.jsx)(n.code,{children:"provenanced"})," commands. One way to accomplish this is to use the ",(0,t.jsx)(n.code,{children:"jq"})," command to parse and query json data. For more info on ",(0,t.jsx)(n.code,{children:"jq"})," see ",(0,t.jsx)(n.a,{href:"https://stedolan.github.io/jq/download/",children:"https://stedolan.github.io/jq/download"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Example ",(0,t.jsx)(n.code,{children:"provenanced"})," command that uses ",(0,t.jsx)(n.code,{children:"jq"})," to parse the output."]}),"\n",(0,t.jsx)(n.h4,{id:"before",children:"Before"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"provenanced  --testnet q block\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{"block_id":{"hash":"3B27CC4E15D4022587B06787734254C2D2D14BA79C19493A5561BCCB8CD9C220","parts":{"total":1,"hash":"35A1168D5518D97CC12F09534072A8F688758A11ED37302A1E3FB0AA052FDF86"}},"block":{"header":{"version":{"block":"11"},"chain_id":"pio-testnet-1","height":"26373","time":"2021-03-11T10:59:13.427265301Z","last_block_id":{"hash":"EB40B2392FA71D21A405263A9C26E48EDD23A1AF30D5440B040C2276A1A64959","parts":{"total":1,"hash":"441E673DE088DE1916C590499716227515600D4B55323E8BD3EAFAAB1614C2BA"}},"last_commit_hash":"07FE26AEB1739B6287E698DF89D8BE563C8E59C9F4D9EC6F2F5B696C17BC8989","data_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855","validators_hash":"D99B22042480A642560299B08DEB4E2F5597145B7EF8CFBDA7A15235E7CE30FD","next_validators_hash":"D99B22042480A642560299B08DEB4E2F5597145B7EF8CFBDA7A15235E7CE30FD","consensus_hash":"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F","app_hash":"E9ADB51FB9BBAF83083E82F41C0D948221268B372FD0DE574CFC522CB6E2D27B","last_results_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855","evidence_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855","proposer_address":"4CC7186D6C520A9EF696A6A0D6802564593D7380"},"data":{"txs":null},"evidence":{"evidence":null},"last_commit":{"height":"26372","round":0,"block_id":{"hash":"EB40B2392FA71D21A405263A9C26E48EDD23A1AF30D5440B040C2276A1A64959","parts":{"total":1,"hash":"441E673DE088DE1916C590499716227515600D4B55323E8BD3EAFAAB1614C2BA"}},"signatures":[{"block_id_flag":2,"validator_address":"4CC7186D6C520A9EF696A6A0D6802564593D7380","timestamp":"2021-03-11T10:59:13.443821923Z","signature":"ct9KWn804qYTu3QkoSWaLaXxB5ZkgGHV+iLA3v+p3R5Vqro9+hqfr49H8RaO5M2ENaYZpeJZELRShUWdKiztBg=="},{"block_id_flag":2,"validator_address":"7100D18B251B4AB281A26BF64C81B20BABD77390","timestamp":"2021-03-11T10:59:13.427265301Z","signature":"uesfDwmY8egrBNNc7H130jnprNakHRDfTQFVmpbUSHkUDMYvT+CCRPk87Gn7ew6F7qSktUBRRp3Y+1AESxxLBQ=="},{"block_id_flag":2,"validator_address":"CF53B691AFA2EB28C3D2AE118EF8F88FC48459BC","timestamp":"2021-03-11T10:59:13.425947442Z","signature":"jA0+R+y4tzpov4qPEHhOOI1rsm/uma7qukpTEPYA5VLMcnvd93VATuehWmf/R5r95rkWwP46ZUUjoj+U7OBfCA=="},{"block_id_flag":2,"validator_address":"E354428AB16927EBBC3AC4036D8D25B59A47495B","timestamp":"2021-03-11T10:59:13.461404024Z","signature":"7+Rvqw9guBF/ET0TQwc1TRZGzqG0iIcr4/aKQIJ8+T5/dJlFQsn1uktaTpg/jLa4zKoTqXDZm8jUiuLPZUVyCg=="}]}}}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"after",children:"After"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'provenanced  --testnet q block | jq ".block.last_commit.height"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'"25923"\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},98677:(e,n,a)=>{a.d(n,{Y:()=>s});a(67294);var t=a(85893);const s=e=>{let{text:n}=e;return(0,t.jsx)("p",{className:"pb-5 mb-5 -mt-3 border-0 border-b border-b-gray-300 border-solid text-gray-500",children:n})}},24322:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/faucet-ae333710984b4e7bf2e47f15aa362251.png"},11151:(e,n,a)=>{a.d(n,{Z:()=>r,a:()=>i});var t=a(67294);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);