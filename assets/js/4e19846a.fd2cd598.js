"use strict";(self.webpackChunkprovenance_blockchain_developer_portal=self.webpackChunkprovenance_blockchain_developer_portal||[]).push([[9679],{60058:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(74848),r=t(28453);const s={},i="dApp Architecture",o={id:"learn/dapps/dapps-overview",title:"dApp Architecture",description:"Full-Stack dApp",source:"@site/docs/learn/dapps/dapps-overview.md",sourceDirName:"learn/dapps",slug:"/learn/dapps/dapps-overview",permalink:"/docs/learn/dapps/dapps-overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"dappsSidebar",next:{title:"Identity Verification",permalink:"/docs/learn/dapps/identity-verification"}},c={},l=[{value:"Full-Stack dApp",id:"full-stack-dapp",level:2}];function d(e){const n={h1:"h1",h2:"h2",img:"img",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"dapp-architecture",children:"dApp Architecture"}),"\n",(0,a.jsx)(n.h2,{id:"full-stack-dapp",children:"Full-Stack dApp"}),"\n",(0,a.jsx)(n.p,{children:"A full-stack dApp (web or mobile app) using Provenance Blockchain typically consists of several layers and components\nthat work together to provide a seamless and secure experience for users. Here is a high-level overview of the\narchitecture:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"dapp architecture",src:t(89200).A+"",width:"2412",height:"1514"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Frontend Layer"}),": The frontend layer is responsible for rendering the user interface and handling user interactions.\nIt is usually built using modern web or mobile app technologies like React, React Native, Vue, Angular, or Swift for\ncreating responsive and interactive interfaces. This layer communicates with the backend layer through APIs to perform\nvarious tasks."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Backend Layer"}),": The backend layer manages the business logic and data processing of the dApp. It often includes a\nserver or serverless architecture, built using technologies like Node.js, Python, or Java, which exposes RESTful or\nGraphQL APIs for the frontend to consume. The backend layer communicates with the Provenance Blockchain to read and\nwrite data, interact with smart contracts, and perform other blockchain-related tasks."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"BlockVault and EOS (Encrypted Object Store)"}),": BlockVault provides a secure and privacy-preserving storage solution for\nyour dApp by leveraging the Encrypted Object Store (EOS). EOS is a storage system that enables the\nencryption of sensitive data before storing it on the Provenance Blockchain. By integrating with BlockVault and EOS,\nyour dApp can benefit from an added layer of security, ensuring that user data remains protected and confidential while\nmaintaining the integrity of the information stored on the blockchain."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Provenance Blockchain"}),": The Provenance Blockchain forms the core of the dApp, providing a decentralized and secure\nledger for storing and managing data. The blockchain ensures data integrity and security. Smart contracts are deployed\non the Provenance Blockchain to define and enforce the rules of the dApp, such as token issuance, trading, and\ncompliance."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Smart Contracts"}),": Smart contracts are programs that run on the Provenance Blockchain. They are written in Rust and\nare used to automate processes, enforce rules, and manage data in a transparent and decentralized manner. Smart\ncontracts can be used to define the logic for token issuance, transfer restrictions, investor accreditation, and other\nregulatory requirements."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Wallet"}),": The wallet is an important component in the architecture, enabling users to securely manage their digital\nassets and interact with the dApp. Wallet: As a dApp builder, you don't need to create a new wallet for your\napplication. Instead, you can leverage any of the available ecosystem wallets that support WalletConnect. This allows\nusers to securely connect their wallets to your dApp, enabling seamless transactions and interactions with the\nProvenance Blockchain. By integrating with existing wallets, you can focus on building your dApp's core functionalities\nand enhance the user experience."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"External Services"}),": dApps may also integrate with external services to enhance their functionality, such as identity\nverification providers for KYC/AML checks, oracles for real-time data feeds, and payment gateways for fiat currency\ntransactions."]}),"\n",(0,a.jsx)(n.p,{children:"In summary, a full-stack dApp using the Provenance Blockchain combines a frontend layer, backend layer, smart contracts,\nand a wallet to provide a secure, transparent, and efficient experience for users. The architecture is designed to\nfacilitate seamless interaction between the various components, leveraging the power of the Provenance Blockchain and\nexternal services to deliver a comprehensive and innovative solution."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},89200:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/dapp-architecture-cbe4b48d018d03c996b087994ee0d746.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(96540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);